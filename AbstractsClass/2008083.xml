<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SHF: Small: Semantics of Higher Order Probabilistic Programs</AwardTitle>
<AwardEffectiveDate>08/01/2020</AwardEffectiveDate>
<AwardExpirationDate>07/31/2023</AwardExpirationDate>
<AwardTotalIntnAmount>425000.00</AwardTotalIntnAmount>
<AwardAmount>425000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Probabilistic programming is a powerful programming paradigm that focuses on the use of randomness to model uncertainty. The topic has enjoyed a recent resurgence of interest spurred by new applications in machine learning and statistical analysis of large datasets. Several new probabilistic programming languages such as Church, Anglican, and Venture have emerged in the last few years that allow statisticians to construct statistical models, sample probability distributions, condition on events, and perform Bayesian inference. The rapid development of these languages has created a need for sound semantic foundations and logical tools for specification and reasoning about probabilistic program behavior. Describing the behavior of probabilistic programs with higher-order features and mechanisms for sampling and conditioning presents enormous mathematical challenges. A variety of diverse mathematical structures for capturing the most salient properties of these languages have recently been proposed, similar in spirit but diverging markedly in execution. The objective of this project is to isolate the fundamental principles at work in each case and ultimately determine whether and how these diverse approaches can be reconciled. &lt;br/&gt;&lt;br/&gt;The project investigates useful semantic and logical tools to guide the future development of probabilistic languages and logics. The project provides fundamental knowledge and insights that will inform the design of next-generation higher-order probabilistic programming languages with conditioning and Bayesian inference, along with compiler technology and runtime support for these languages. The research results and software artifact from this project will be made publicly available. The project personnel will organize two annual summer research workshops, and participate by giving introductory lectures on probabilistic programming and Bayesian inference, and supervise followup projects with interested students.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>07/22/2020</MinAmdLetterDate>
<MaxAmdLetterDate>07/22/2020</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>2008083</AwardID>
<Investigator>
<FirstName>Dexter</FirstName>
<LastName>Kozen</LastName>
<EmailAddress>kozen@cs.cornell.edu</EmailAddress>
<StartDate>07/22/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>7798</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>2878</Code>
<Text>SPECIAL PROJECTS - CCF</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
</Award>
</rootTag>
