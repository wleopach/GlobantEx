<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>SaTC: CORE: Small: Nested Black-Box Constructions in Cryptography</AwardTitle>
<AwardEffectiveDate>10/01/2020</AwardEffectiveDate>
<AwardExpirationDate>09/30/2023</AwardExpirationDate>
<AwardTotalIntnAmount>499130.00</AwardTotalIntnAmount>
<AwardAmount>499130</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Secure computation is a broad topic in cryptography that deals with how to compute functions over distributed private data. At the most basic level, the security of this task is derived from simple, low level, cryptographic primitives. A central question in this area is whether the code of the low level primitives is required to securely compute the desired function. This question has remained largely unexplored for the case of cryptographic functions. The project's novelties are new enhancements to classical cryptographic primitives, and a new paradigm to securely compute any function instantiated from them without requiring its full code. The project's impacts are discovery of new and general-purpose tools that have the potential to transform the area of black-box secure computation.&lt;br/&gt;&lt;br/&gt;The project takes a fresh look at the case of functions that depend only on input/output behavior of other cryptographic primitives and not their code. Existing methods to securely compute such functions require the code of the primitives they depend on even though the functions themselves do not. Such functions, referred to as nested black-box functions, happen to be a major source of inefficiency in secure computation. It is argued that if classical cryptographic primitives such as one-way functions admit sufficiently powerful secure computation protocols, it may be possible to avoid the need for their code when computing nested black-box functions instantiated from them. This project explores ways to construct these enhanced primitives from classical ones in a black-box manner, and general-purpose methods to securely compute nested black-box functions instantiated from them.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>08/10/2020</MinAmdLetterDate>
<MaxAmdLetterDate>08/10/2020</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>2028920</AwardID>
<Investigator>
<FirstName>Omkant</FirstName>
<LastName>Pandey</LastName>
<EmailAddress>omkant@gmail.com</EmailAddress>
<StartDate>08/10/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>SUNY at Stony Brook</Name>
<CityName>Stony Brook</CityName>
<ZipCode>117940001</ZipCode>
<PhoneNumber>6316329949</PhoneNumber>
<StreetAddress>WEST 5510 FRK MEL LIB</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>025Z</Code>
<Text>SaTC: Secure and Trustworthy Cyberspace</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
</Award>
</rootTag>
