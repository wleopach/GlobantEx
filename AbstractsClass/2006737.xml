<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>AF: Small: Beyond Worst-Case Analysis</AwardTitle>
<AwardEffectiveDate>10/01/2020</AwardEffectiveDate>
<AwardExpirationDate>09/30/2023</AwardExpirationDate>
<AwardTotalIntnAmount>450000.00</AwardTotalIntnAmount>
<AwardAmount>450000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>A. Funda Ergun</SignBlockName>
</ProgramOfficer>
<AbstractNarration>With algorithms increasingly dominating our world, the need to understand when and why they work has never been greater.  The goal of the mathematical analysis of algorithms is to provide guidance about which algorithm is the ?best? for solving a given computational problem. Worst-case analysis summarizes the performance profile of an algorithm by its worst performance on any input of a given size, implicitly advocating for the algorithm with the best-possible worst-case performance. Strong worst-case guarantees are the holy grail of algorithm design, providing an application-agnostic certification of an algorithm?s robustly good performance. However, for many fundamental problems and performance measures, such guarantees are impossible, and a more nuanced analysis approach is called for. This project investigates several alternatives to worst-case analysis, with applications to machine learning and social-network analysis.&lt;br/&gt;&lt;br/&gt;This project has three research thrusts.  The first thrust concerns "smoothed analysis," where an adversarially chosen input is perturbed by nature, and focuses on two different application areas, both with striking open questions: regret-minimization in online learning, and the running time of local-search algorithms for combinatorial problems.  The second thrust investigates structured prediction problems in machine learning, where the goal is to label jointly a collection of objects, using information about relationships between the objects (for example, identifying regions in an image of parts-of-speech in a sentence). Here, the questions concern to what extent a ground-truth labeling can be recovered, as a function of the combinatorial structure of the object relationships and the amount of noise in the data.  The final thrust concerns distribution-free models of social networks, motivated by triadic closure. The goal here is to investigate novel graph classes that are tailored to social networks, and to prove structural and algorithmic results for them.  Together, these research thrusts both deepen the state-of-the-art in "beyond worst-case analysis" and also extend its reach to important new application domains.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>06/29/2020</MinAmdLetterDate>
<MaxAmdLetterDate>06/29/2020</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>2006737</AwardID>
<Investigator>
<FirstName>Tim</FirstName>
<LastName>Roughgarden</LastName>
<EmailAddress>tar2147@columbia.edu</EmailAddress>
<StartDate>06/29/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Columbia University</Name>
<CityName>NEW YORK</CityName>
<ZipCode>100276902</ZipCode>
<PhoneNumber>2128546851</PhoneNumber>
<StreetAddress>2960 Broadway</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<ProgramElement>
<Code>2878</Code>
<Text>Special Projects - CCF</Text>
</ProgramElement>
<ProgramElement>
<Code>7796</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>075Z</Code>
<Text>Artificial Intelligence (AI)</Text>
</ProgramReference>
<ProgramReference>
<Code>079Z</Code>
<Text>Machine Learning Theory</Text>
</ProgramReference>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7932</Code>
<Text>COMPUT GAME THEORY &amp; ECON</Text>
</ProgramReference>
</Award>
</rootTag>
