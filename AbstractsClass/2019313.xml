<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle>FMitF: Track 2: Formal Reasoning for Legal Conveyances</AwardTitle>
<AwardEffectiveDate>10/01/2020</AwardEffectiveDate>
<AwardExpirationDate>03/31/2022</AwardExpirationDate>
<AwardTotalIntnAmount>99998.00</AwardTotalIntnAmount>
<AwardAmount>99998</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Nina Amla</SignBlockName>
</ProgramOfficer>
<AbstractNarration>Lawyers draft documents called "conveyances" that govern the transfer of property. These conveyances are written in an intricate syntax that follows precise rules. In previous work, the investigators developed a system for reading standard conveyances and computing their consequences. The present project extends that preliminary work by generalizing it to cover a wider range of conveyances and adding an accessible graphical interface. The project's novelties are in bringing ideas from the fields of programming languages and formal methods to bear on problems in the legal domain. The project's impacts are to create a system that can be used by lawyers and legal educators to reason about complex conveyances and to understand how the laws governing them work.&lt;br/&gt;&lt;br/&gt;At a technical level, the system models the language of conveyances as a domain-specific programming language whose concrete syntax is a restricted subset of the legal English used by the lawyers who draft them. It parses a conveyance into an abstract syntax tree, which it then transforms according to a formal operational semantics to account for subsequent events. A graphical interface provides features such as stepping forward and backward through events, enabling users without a background in computer science to absorb the insights offered by the language-based approach. The project develops a richer model of events, enabling the system to engage in automated reasoning about interactions between events and conveyances that are used by lawyers and judges to settle disputes. Finally, the investigators will deploy the system in the classroom, developing a series of exercises that explore the main elements of property law.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>06/17/2020</MinAmdLetterDate>
<MaxAmdLetterDate>06/17/2020</MaxAmdLetterDate>
<ARRAAmount/>
<AwardID>2019313</AwardID>
<Investigator>
<FirstName>John</FirstName>
<LastName>Foster</LastName>
<EmailAddress>jnfoster@cs.cornell.edu</EmailAddress>
<StartDate>06/17/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>James</FirstName>
<LastName>Grimmelmann</LastName>
<EmailAddress>james.grimmelmann@cornell.edu</EmailAddress>
<StartDate>06/17/2020</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Cornell University</Name>
<CityName>Ithaca</CityName>
<ZipCode>148502820</ZipCode>
<PhoneNumber>6072555014</PhoneNumber>
<StreetAddress>373 Pine Tree Road</StreetAddress>
<CountryName>United States</CountryName>
<StateName>New York</StateName>
<StateCode>NY</StateCode>
</Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>025Z</Code>
<Text>SaTC: Secure and Trustworthy Cyberspace</Text>
</ProgramReference>
<ProgramReference>
<Code>071Z</Code>
<Text>FMitF-Formal Methods in the Field</Text>
</ProgramReference>
<ProgramReference>
<Code>8206</Code>
<Text>Formal Methods and Verification</Text>
</ProgramReference>
</Award>
</rootTag>
